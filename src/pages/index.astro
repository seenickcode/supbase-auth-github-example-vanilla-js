---

---
<html lang="en">
	<head>
		<meta charset="utf-8" />
		<meta name="viewport" content="width=device-width" />
		<title>Astro</title>
	</head>
	<body>
		<div class='container'>
			<div class='section'>
					<h1>Supabase Auth Example</h1>
			</div>
			<div class='section'>
					<a href="https://github.com/supabase/supabase/tree/master/examples/auth/javascript-auth">View the code on GitHub</a>
			</div>
			<div class='section'>
					<form id='sign-up'>
							<h3>Sign Up</h3>
							<label>Email</label><input type='email' name='email' />
							<label>Password</label><input type='password' name='password' />
							<input type='submit'>
					</form>
			</div>
			<div class='section'>
					<form id='log-in'>
							<h3>Log In</h3>
							<label>Email</label><input type='email' name='email' />
							<label>Password</label><input type='password' name='password' />
							<input type='submit'>
					</form>
			</div>
			<div class='section'>
				<form id='log-in'>
						<h3>OAuth Log In</h3>
						<a href="#" id="github-login">Login with Github</a>
				</form>
			</div>
			<div class='section'>
				<form id='magiclink-login'>
					<h3>Magic Link Log In</h3>
					<label>Email</label><input type='email' name='email' />
					<input type='submit'>
				</form>
			</div>
			<div class='section'>
					<form id='validate'>
							<h3>Access Token</h3>
							<input readonly=readonly type='text' id='access-token' /> <small>Default expiry is 60 minutes</small>
							<h3>Refresh Token</h3>
							<input readonly=readonly type='text' id='refresh-token' /> <small>Supabase-js will use this to automatically fetch a new accessToken for you every 60 mins whilst the client is running</small> 
					</form>
			</div>
			<div class='section'>
					<h3>Fetch User Details</h3>
					<button id='user-button'>Fetch</button>
			</div>
			<div class='section'>
					<h3>Logout</h3>
					<button id='logout-button'>Logout</button>
			</div>
	</div>
	</body>
	<script>
		import { createClient } from '@supabase/supabase-js';

		var SUPABASE_URL = 'https://hxihcvtdyzbbylcjorra.supabase.co'
		var SUPABASE_KEY =
			'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Imh4aWhjdnRkeXpiYnlsY2pvcnJhIiwicm9sZSI6ImFub24iLCJpYXQiOjE2NTM5MjEwNDMsImV4cCI6MTk2OTQ5NzA0M30.XixoEOPUHIwUV8rxA8EPMwINs7lGMWwvK9qCL2o-5iI'

		var supabase = createClient(SUPABASE_URL, SUPABASE_KEY)
		window.userToken = null

		console.log(supabase.auth.user())
		console.log(supabase.auth.session())

		document.addEventListener('DOMContentLoaded', function (event) {
			var signUpForm = document.querySelector('#sign-up')
			signUpForm.onsubmit = signUpSubmitted.bind(signUpForm)

			var logInForm = document.querySelector('#log-in')
			logInForm.onsubmit = logInSubmitted.bind(logInForm)

			var userDetailsButton = document.querySelector('#user-button')
			userDetailsButton.onclick = fetchUserDetails.bind(userDetailsButton)

			var logoutButton = document.querySelector('#logout-button')
			logoutButton.onclick = logoutSubmitted.bind(logoutButton)

			var githubLogInButton = document.querySelector('#github-login')
			githubLogInButton.onclick = githubLogInSubmitted.bind(githubLogInButton)

			var maglinkForm = document.querySelector('#magiclink-login')
			maglinkForm.onsubmit = magiclinkLogInSubmitted.bind(maglinkForm)
		})

		const signUpSubmitted = (event) => {
			event.preventDefault()
			const email = event.target[0].value
			const password = event.target[1].value

			supabase.auth
				.signUp({ email, password })
				.then((response) => {
					response.error ? alert('resp err: ' + response.error.message) : setToken(response)
				})
				.catch((err) => {
					alert('catching err: ' + err)
				})
		}

		const logInSubmitted = (event) => {
			event.preventDefault()
			const email = event.target[0].value
			const password = event.target[1].value

			supabase.auth
				.signIn({ email, password })
				.then((response) => {
					response.error ? alert(response.error.message) : setToken(response)
				})
				.catch((err) => {
					alert(err.response.text)
				})
		}

		const fetchUserDetails = () => {
			alert(JSON.stringify(supabase.auth.user()))
		}

		const logoutSubmitted = (event) => {
			event.preventDefault()

			supabase.auth
				.signOut()
				.then((_response) => {
					document.querySelector('#access-token').value = ''
					document.querySelector('#refresh-token').value = ''
					alert('Logout successful')
				})
				.catch((err) => {
					alert(err.response.text)
				})
		}

		const githubLogInSubmitted = (event) => {
			event.preventDefault();
			console.log('logging in with github')
			supabase.auth.signIn({
				provider: 'github' 
			}).then((response) => {
				response.error ? alert('github login: ' + response.error.message) : setToken(response)
			}).catch((err) => {
				alert('github login error CAUGHT: ' + JSON.stringify(err))
			});
		}

		const magiclinkLogInSubmitted = (event) => {
			event.preventDefault()
			const email = event.target[0].value

			supabase.auth
				.signIn({ email })
				.then((response) => {
					response.error ? alert('magiclink resp err: ' + response.error.message) : setToken(response)
				})
				.catch((err) => {
					alert('magiclink catching err: ' + err)
				})
		}

		function setToken(response) {
			console.log('setting token')
			if (response.user.confirmation_sent_at && !response?.session?.access_token) {
				alert('Confirmation Email Sent')
			} else {
				console.log(JSON.stringify(response.session))
				document.querySelector('#access-token').value = response.session.access_token
				document.querySelector('#refresh-token').value = response.session.refresh_token
				alert('Logged in as ' + response.user.email)
			}
		}
	</script>
</html>
